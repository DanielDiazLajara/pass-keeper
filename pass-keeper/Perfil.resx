<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>